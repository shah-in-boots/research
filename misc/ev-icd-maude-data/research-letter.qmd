---
title: Real-World Safety Profile of the EV ICD System
subtitle: Insights from the MAUDE Database
author:
  - name: Anish S. Shah, MD, MS
    orcid: 0000-0002-9729-1558
    email: anish.shah@hsc.utah.edu
    affiliations:
      - ref: utah
      - ref: gewva
  - name: Marc Engels, MD, PhD
    affiliations:
      - ref: utah
  - name: Roger A. Freedman, MD
    affiliations:
      - ref: utah
  - name: Immo Lehmann, MD, PhD
    affiliations:
      - ref: utah
  - name: Klitos Konstantinidis, MD
    affiliations:
      - ref: utah
  - name: Ravi Ranjan, MD, PhD
    affiliations:
      - ref: utah
      - ref: gewva
  - name: T. Jared Bunch, MD, FHRS
    orcid: 0000-0002-9729-1558
    email: jared.bunch@hsc.utah.edu
    affiliations:
      - ref: utah
    corresponding: true
affiliations:
  - id: utah
    name: Department of Medicine, Division of Cardiology, University of Utah, Salt Lake City, UT
  - id: gewva
    name: Department of Medicine, George E. Wahlen VA Medical Center, Salt Lake City, UT
    
filters:
  - authors-block
  
format:
  docx:
    reference-doc: ../../../bibliography/manuscript.docx
      
bibliography: citations.bib
csl: aha.csl
notes-after-punctuation: true
link-bibliography: true
link-citations: true
---

{{< pagebreak >}}

```{r}
#| label: setup
#| include: false
#| cache: false

# Libraries
library(tidyverse)
library(stringr)
library(lubridate)
library(glue)

# Get all the potential data sets read in
data_loc <- here::here("~/OneDrive - University of Utah/data/maude")
evicd_df <- readr::read_csv(fs::path(data_loc, "maude-ev-icd.csv"))
aurora_df <- readr::read_csv(fs::path(data_loc, "maude-medtronic-aurora.csv"))
epsila_df <- readr::read_csv(fs::path(data_loc, "maude-medtronic-epsila.csv"))

# Combine the datasets
# Remove duplicates based on the report number
# Delete the text that is not manufacturer canned speach
combined_dat <- 
	dplyr::bind_rows(
		evicd_df,
		aurora_df,
		epsila_df
	) |>
	janitor::clean_names() |>
	dplyr::distinct(report_number, .keep_all = TRUE) |>
	dplyr::mutate(event_text = stringr::str_extract(event_text, "^.*?(?=Manufacturer Narrative:|$)")) |>
	dplyr::mutate(event_text = tolower(event_text)) |>
	dplyr::distinct(event_text, .keep_all = TRUE) |>
	filter(str_detect(manufacturer, "MEDTRONIC|MPRI")) |>
	mutate(event_date = as.Date(event_date, format = "%Y/%m/%d %H:%M:%S")) |>
	filter(event_date >= as.Date("2023-10-23"))

categorize_event <- function(text) {
	text <- tolower(text)
	
	# Create categories of interest
	# Mortality
	# Infection, including mediastinal
	# Inappropriate shocks (oversensing, undersensing)
	# Lead issues - perforation, fracture, dislodgement, arterial placement
	# Tissue damage - lung, mediastinum, heart, arteries
	categories <- list(
		# Sensing issues
    oversensing = c("oversensing", "over-sensing", "p-wave", "noise", "inappropriate detection", "atrial fibrillation", "atrial flutter"),
    undersensing = c("undersensing", "under-sensing", "failure to detect", "missed detection", "asystole"),
    general_sensing = c("sensing", "detection issue", "r-wave"),
    # Procedural complications
    bleeding = c("bleed", "blood", "hemorrhag", "hematoma"),
    infection = c("infect", "sepsis", "bacteremia", "drainage", "mediastinitis", "purulent"),
    pneumothorax = c("pneumothorax", "lung", "pleural"),
    pericardial = c("pericard", "tamponade"),
    surgical = c("surgery", "surgical", "revision"),
    # Device issues
    programming_issues = c("programming", "settings", "parameter"),
    battery = c("battery", "power", "charge"),
    dislodgement = c("dislodg", "migration", "displaced"),
    lead = c("fracture", "break", "broken", "conductor", "insulation", "removed"),
    explant = c("explant"),
    # Shocking
    inappropriate_shock = c("shock", "inappropriate shock", "unnecessary shock"),
    failure_to_shock = c("failed shock", "no shock", "didn't shock"),
    # Outcomes
    death = c("death", "died", "deceased", "mortality"),
    injury = c("injury", "trauma", "damage"),
    discomfort = c("pain", "discomfort", "uncomfortable"),
    # Clinical study
    study = "clinical study"
	)
	
  # Initialize result vector
  result <- character(0)
  
  # Check for each category
  for (cat_name in names(categories)) {
    if (any(stringr::str_detect(text, paste(categories[[cat_name]], collapse = "|")))) {
      result <- c(result, cat_name)
    }
  }
  
  # If no categories found, mark as "other"
  if (length(result) == 0) {
    result <- c("other") 
  }
  
  # Return
  paste0(result, collapse = ";")
}

dat <-
	combined_dat |>
	mutate(event_category = sapply(event_text, categorize_event, USE.NAMES = FALSE)) |>
	tidyr::separate_longer_delim(event_category, delim = ";") |>
	mutate(value = 1) |>
	pivot_wider(names_from = "event_category", values_from = value, values_fill = 0)
```

```{r}
#| label: data-creation
#| include: false

tbl <-
	dat |>
	select(study:last_col()) |>
	gtsummary::tbl_summary()

counts <- 
	dat |>
	select(other:last_col()) |>
	summarise(across(everything(), ~ sum(.x))) 

percents <- 
	signif(counts / nrow(dat) * 100, 1)

# Temporary filtered results to look at
tmp <- 
	dat |>
	filter(infection == 1) |>
	select(event_text) |>
	unlist()
```

The first substernal and extracardiac defibrillation system, the extravascular implantable cardioverter-defibrillator (**EV ICD**), provides a novel technology that both allows effective defibrillation at similar energy to intracardiac devices and allows anti-tachycardic pacing, all without the risks inherent to transvenous systems.
The recently published long-term outcomes of the Extravascular Implantable Cardioverter-Defibrillator (EV ICD) Pivotal Study shows promising results, with follow-up data up to 3 years. 
Friedman et al. 2024 found that the EV ICD system provided 100% termination of discrete spontaneous ventricular arrhythmias, with no major intraprocedural or ICD complications from implant to final follow-up, with an overall freedom of related complications of 89% at 3 years [@Friedman2024].

Clinical trials however often represent best-case scenarios, with both experienced operators in a controlled setting with careful patient screening and selection [@Maclean2024]. 
We analyzed post-market surveillance data from the U.S. Food & Drug Administration (**FDA**) Manufacturer and User Facility Device Experience (**MAUDE**) Database, which provides voluntary reporting for medical devices from health care professionals and mandatory reporting from manufacturers. 
We searched for reports from the October 23, 2023, the date of FDA approval of the *Aurora EV ICD* system, to December 31, 2024, that were related to either the device itself or the *Epsila* lead. 
We manually adjudicated each report and categorized events into device-specific complications, including mortality, inappropriate therapies, sensing issues, procedural complications, and infections. 

The MAUDE data contains `r nrow(dat)` independent event reports from `r glue('{format(min(dat$event_date), "%B %d, %Y")} to {format(max(dat$event_date), "%B %d, %Y")}')`.
Of the event reports, `r glue("{nrow(subset(dat, study == 1))} ({round(nrow(subset(dat, study == 1))/nrow(dat) * 100)}%)")` were indicated to have been part of a clinical study.
The most common issue found was oversensing, with `r glue("{nrow(subset(dat, oversensing == 1))} ({round(nrow(subset(dat, oversensing == 1))/nrow(dat) * 100)}%)")` reports of issues with P and T wave oversensing, along with noise that led to the false detection of ventricular arrhythmias.
The oversensing and noise issues were associated with `r glue("{nrow(subset(dat, inappropriate_shock == 1))} ({round(nrow(subset(dat, inappropriate_shock == 1))/nrow(dat) * 100)}%)")` reports of inappropriate shocks, as well as due to supraventricular arrhythmias that fell into the the ventricular therapy zones.
Operators noted at least `r glue("{nrow(subset(dat, programming_issues == 1))} ({round(nrow(subset(dat, programming_issues == 1))/nrow(dat) * 100)}%)")` times that the device had to be repositioned due to difficulty manipulating the lead, abnormal sensing, or difficulty in device programming due to noise or position.
The lead became dislodged or migrated during follow-up for `r glue("{nrow(subset(dat, dislodgement == 1))} ({round(nrow(subset(dat, dislodgement == 1))/nrow(dat) * 100)}%)")` patients, and there were `r glue("{nrow(subset(dat, infection == 1))} ({round(nrow(subset(dat, infection == 1))/nrow(dat) * 100)}%)")` reports of superficial or deeper infections.
The listed reasons led to `r glue("{nrow(subset(dat, explant == 1))} ({round(nrow(subset(dat, explant == 1))/nrow(dat) * 100)}%)")` device explantations. 
During initial implant, pericardial damage or laceration occurred `r glue("{nrow(subset(dat, pericardial == 1))} ({round(nrow(subset(dat, pericardial == 1))/nrow(dat) * 100)}%)")` times, along with pneumothorax and pneumomediastinum `r glue("{nrow(subset(dat, pneumothorax == 1))} ({round(nrow(subset(dat, pneumothorax == 1))/nrow(dat) * 100)}%)")`.
There were `r glue("{nrow(subset(dat, death == 1))} ({round(nrow(subset(dat, death == 1))/nrow(dat) * 100)}%)")` mortality events, none of which were due to failure of cardioverter/defibrillator therapy.
There was also a single event where defibrillatory testing failed to cardiovert ventricular fibrillation, leading to the addition of a transvenous system.
The relative frequency of these events are seen in @fig-events.

Although we cannot compare directly the rate of adverse events seen in the *Pivotal* trial, we can identify the most frequent complications and novel issues that have not yet been reported.
The frequency of events can be extrapolated to the suspected number of implants performed during the first year of this device's approval, which likely herald the rates to come with early-adopters.
Sensing was the predominant issue, with the majority of reports noting noise, double-counting, and atrial oversensing, with 1 out of 5 of these events resulting in inappropriate shocks.
Importantly, we found procedural complications such as pericardial damage or laceration, mediastinal damage, and pneumothoraces to be an infrequent but present fraction of event reports, including at least once case of cardiac tamponade requiring pericardiocentesis, while *Pivotal* reported no events of this type.
As a reference, a nation-wide study by Kirkfeld et al. 2014 showed that over 1 year, had 562 complications out of 5918 implants [@Kirkfeldt2014].
Out of all complications, they showed `r round((39 + 51)/562 * 100)`% were pneumothoraces, `r round((49 + 69)/562 * 100)`% were superficial and deep wound infections, `r round(38/562 * 100)`% were cardiac perforations, and `r round((10 + 7)/562 * 100)`% were lead dislodgements.
The MAUDE data is limited to voluntary reporting and lacks the total implant denominator to understand incidence, and moreso reflects the early adoption experience and not reflect long-term performance with increased operator expertise.

Our findings highlight the importance of post-market surveillance and the number of events suggest the need to continue to closely monitor.
As a new technology, we anticipate that complication rates will continue to improve with growing user experience and training.
We believe this data should inform shared decision-making and discussion between physicians and patients as the EV ICD disseminates into broader clinical use.

{{< pagebreak >}}

```{r}
#| label: fig-events
#| echo: false
#| warning: false
#| fig-cap: "Breakdown of Procedural Complications Reported from the MAUDE Database. The figure breaks down the frequency and summary of key complication reports seen in the MAUDE database for the EV-ICD generator and lead. From left to right, we show the distribution and frequency of events by major categories to specific events. The specific events are displayed alphabetically. Infections include both superficial and potential deep infections. Oversensing events were predominantly P waves followed by T waves. Undersensing of R waves often led to repositioning. Lead fractures including insulation breaches. Dislodgement were described intraprocedurally, and required repositioning. Pericardial events including lacerations, new effusions, and tamponade. Pneumothoraces also included pneumomediastinum. * = Unspecified injuries reported in the MAUDE database."
#| fig-height: 10
#| fig-width: 10

# Major categories
#
# Lead issues
# 	Fractures or lead issues
# 	Dislodgements
# Insertion complications
# 	Damage to tissue (pericardial, pneumo, etc)
# 	Discomfort
# 	Infection
# System issues
# 	Shocks
# 	Explants
# 	Programming or battery issues (sensing)

library(ggalluvial)
alluvial_dat <-
	dat |>
	# Pivot longer to categorize all of the events
	tidyr::pivot_longer(cols = undersensing:surgical, names_to = "spec_type", values_to = "occurrence") |>
	filter(occurrence == 1) |>
	distinct() |>
	select(spec_type, occurrence) |>
	mutate(maude = "MAUDE\nReports") |>
	mutate(major_type = case_when(
		spec_type %in% c("undersensing", "oversensing", "explant", "inappropriate_shock") ~ "Programming",
		spec_type %in% c("pericardial", "injury", "pneumothorax", "surgical", "discomfort", "bleeding", "infection") ~ "Implantation",
		spec_type %in% c("lead", "dislodgement") ~ "Leads"
	)) |>
	# Limit to the problems that are of interest
	filter(!is.na(major_type)) |>
	group_by(maude, major_type, spec_type) |>
	summarize(counts = n()) |>
	ungroup() |>
	mutate(percent = counts / sum(counts)) |>
	# Rename and relabel the events
	mutate(spec_type = case_when(
		spec_type == "bleeding" ~ "Bleeding",
		spec_type == "discomfort" ~ "Discomfort",
		spec_type == "dislodgement" ~ "Dislodgement",
		spec_type == "explant" ~ "Explantation",
		spec_type == "inappropriate_shock" ~ "Inappropriate\nshock",
		spec_type == "infection" ~ "Infection",
		spec_type == "injury" ~ "*",
		spec_type == "lead" ~ "Lead fracture",
		spec_type == "oversensing" ~ "Oversensing",
		spec_type == "pericardial" ~ "Pericardial",
		spec_type == "pneumothorax" ~ "Pneumothorax",
		spec_type == "surgical" ~ "Surgery",
		spec_type == "undersensing" ~ "Undersensing",
	))
	
ggplot(alluvial_dat, aes(y = percent, axis1 = maude, axis2 = major_type, axis3 = spec_type)) +
	geom_alluvium(aes(fill = major_type), width = 0.1) +
	geom_stratum(width = 0.5) +
	geom_text(stat = "stratum", aes(label = after_stat(stratum)), nudge_x = 0.0, size = 3.5) +
	scale_x_discrete(limits = c("Overall Events", "Complication Type", "Specific Event")) +
	scale_y_continuous(labels = scales::label_percent()) +
	scale_fill_brewer(palette = "RdPu") +
	guides(fill = "none") + 
	theme_classic() +
	labs(
		title = "Distribution of events and event subtypes in the MAUDE database",
		y = "Percent frequency of event type"
	) 
```

{{< pagebreak >}}

::: {#refs}
:::

